package ds;

/**
 * 二分查找（递归和非递归）
 * <p>
 * 含义：
 * <p>
 * 折半查找，每次打对折，让需要被查找的元素与数组中间的元素相比较。
 * 如果相等就说明找到了，如果大于就往右半部分继续折半查找，如果小于就往左半部分继续折半查找。
 * 直到找到元素或者元素只有一个仍然未找到时，结束这一切查找过程。
 * <p>
 * 核心：
 * 最好时间复杂度：O(1)
 * 最坏时间复杂度： O(logn)
 * 平均时间复杂度：O(logn)
 * 空间复杂度：O(1) 因为数组的长度时间是一个固定值，并不随着数据规模的增大而增大，增长趋势是不变的。
 *
 * @author yangyi 2018年12月09日23:12:08
 */
public class BinarySearch {


}
